(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{373:function(e,t,a){e.exports=a.p+"assets/img/git-deploy.666eb544.png"},374:function(e,t,a){e.exports=a.p+"assets/img/config-vars.b4c21a29.png"},411:function(e,t,a){"use strict";a.r(t);var s=a(46),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"week-9-deploying-to-a-serverless-infrastructure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#week-9-deploying-to-a-serverless-infrastructure"}},[e._v("#")]),e._v(" Week 9 (Deploying to a Serverless Infrastructure)")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[s("strong",[e._v("Session Dependencies")])]),e._v(" "),s("p",[e._v("This week we are continuing with our wine tasting theme. Please ensure you have the latest version\nof the project")]),e._v(" "),s("p",[e._v("You can clone this version using the following command:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("git clone https://github.com/joeappleton18/db-starter-project.git --single-branch --branch week-8-solutions")])]),e._v(" "),s("li",[e._v("This week we need to be working on a master branch. Run, "),s("code",[e._v("git checkout -b master")])])])]),e._v(" "),s("p",[e._v("This week marks the end of our journey in learning the basics of creating database applications. To complete this journey, we need to consider how we might deploy our application. As such, the primary question for this week is:")]),e._v(" "),s("h3",{attrs:{id:"how-can-i-deploy-my-data-driven-web-applications-to-a-secure-and-scalable-infrastructure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-can-i-deploy-my-data-driven-web-applications-to-a-secure-and-scalable-infrastructure"}},[e._v("#")]),e._v(" How can I deploy my data-driven web applications to a secure and scalable infrastructure?")]),e._v(" "),s("p",[e._v("Deploying a web application used to be a slow and painful process. You would have to physically provision multiple servers (staging and production) and then use a protocol like FTP or SSH to upload changes and patches to our codebase. The issue with this approach, due to its cumbersome nature, deployments may happen infrequently. To live up to the agile manifesto of fast iterations and quick deployments we need a more versatile solution, and this solution comes in the form of a serverless infrastructures and cloud hosting.")]),e._v(" "),s("h2",{attrs:{id:"modern-deployment-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modern-deployment-options"}},[e._v("#")]),e._v(" Modern Deployment Options")]),e._v(" "),s("p",[e._v("Both cloud hosting solutions (e.g., Digital Ocean) and serverless infrastructures (e.g., AWS, Google Cloud and Azure) circumvent the need for us to maintain any physical hardware, and both can scale along with increased application demand. The key difference between these two solutions is with cloud hosting we need to install and maintain the servers software, with a serverless solution this is handled for us. In summary, both are fine choices. However, the process of installing and patching software takes more human resource. As such, we are going to be exploring a serverless infrastructure for our wine tasting application.")]),e._v(" "),s("h2",{attrs:{id:"what-is-a-serverless-infrastructure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-serverless-infrastructure"}},[e._v("#")]),e._v(" What is a serverless infrastructure")]),e._v(" "),s("p",[e._v("According to Amazon (AWS, the largest provider of such an infrastructure, "),s("a",{attrs:{href:"https://aws.amazon.com/lambda/serverless-architectures-learn-more/",target:"_blank",rel:"noopener noreferrer"}},[e._v('"A serverless architecture is a way to build and run applications and services without having to manage infrastructure. Your application still runs on servers, but all the server management is done by AWS. "'),s("OutboundLink")],1),e._v(". They claim that a serverless infrastructure affords us the following benefits:")]),e._v(" "),s("ul",[s("li",[e._v("No operating systems to choose, secure, patch, or manage.")]),e._v(" "),s("li",[e._v("No servers to right size, monitor, or scale out.")]),e._v(" "),s("li",[e._v("No risk to your cost by over-provisioning.")]),e._v(" "),s("li",[e._v("No risk to your performance by under-provisioning.")])]),e._v(" "),s("p",[e._v("The above benefits are all well and good; however, AWS is notoriously complex, and has a steep learning curve. Case in point, consider their infrastructure diagram for a simple todo list application:")]),e._v(" "),s("img",{attrs:{src:"https://joeappleton18.github.io/data-management-2021-notes/images/aws-infrastructure.png"}}),e._v(" "),s("blockquote",[s("blockquote",[s("p",[e._v("A, not so simple, serverless todo list. Adapted, from a digram provided by AWS.")])])]),e._v(" "),s("p",[e._v("Notice, in the above architectural digram, we have lambda functions (denoted by the lambda greek letter). These functions are discreet units of code that are executed through triggers. Lambda functions are an interesting proposition, as we only pay for them when they are invoked. However, such a set up is overkill for our little wine tasting application. As such, we are going to opt for services that offer a simplified abstraction layer over AWS.")]),e._v(" "),s("h2",{attrs:{id:"our-infrastructure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#our-infrastructure"}},[e._v("#")]),e._v(" Our Infrastructure")]),e._v(" "),s("img",{attrs:{src:"https://joeappleton18.github.io/data-management-2021-notes/images/wine-infrastructure.png"}}),e._v(" "),s("blockquote",[s("blockquote",[s("p",[e._v("The infrastructure we are setting up this week - utilising Heroku and MongoDB Atlas.")])])]),e._v(" "),s("p",[e._v("Rather than use AWS directly, we are going to be utilising two services that simplify its infrastructure - "),s("a",{attrs:{href:"https://devcenter.heroku.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heroku"),s("OutboundLink")],1),e._v(" and "),s("a",{attrs:{href:"https://www.mongodb.com/cloud/atlas/register",target:"_blank",rel:"noopener noreferrer"}},[e._v("MongoDB Atlas"),s("OutboundLink")],1),e._v(". Heroku allows us to quickly deploy applications to a lightweight, secure, virtualized Unix container - known as a dyno. Heroku allows us to deploy applications by simply pushing our codebase to a dedicated remote branch: "),s("code",[e._v("git push heroku master")]),e._v(". While Heroku will take care of running our node application, we'll use MongoDB Atlas to host our database. MongoDB atlas if a service offered by MongoDB which simplifies the process of provisioning and deploying cloud instances of MongoDB.")]),e._v(" "),s("h2",{attrs:{id:"practical-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#practical-session"}},[e._v("#")]),e._v(" Practical Session")]),e._v(" "),s("p",[e._v("We'll start the practical session by, first setting up our cloud database. Next, we'll move on to deploying our Node application to Heroku.")]),e._v(" "),s("h2",{attrs:{id:"setting-up-our-cloud-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-our-cloud-database"}},[e._v("#")]),e._v(" Setting up our Cloud Database")]),e._v(" "),s("p",[e._v("Let's dive in and created a MongoDB Atlas account. This is a straight forward process:")]),e._v(" "),s("img",{attrs:{src:"https://joeappleton18.github.io/data-management-2021-notes/images/set-up-a-atlas-account.png"}}),e._v(" "),s("blockquote",[s("blockquote",[s("p",[e._v("The first three steps in setting up a free Atlas Account.")])])]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.mongodb.com/cloud/atlas/register",target:"_blank",rel:"noopener noreferrer"}},[e._v("Register a new account"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("li",[e._v('On the next screen, you\'ll get the opportunity to set up a new project, name it "wine" and select JavaScript as the language choice.')]),e._v(" "),s("li",[e._v("Select select a Free, shared, cluster.")]),e._v(" "),s("li",[e._v('Finally, choose an AWS cloud provider and click "Create Cluster"')])]),e._v(" "),s("img",{attrs:{src:"https://joeappleton18.github.io/data-management-2021-notes/images/configuring-your-cluster.png"}}),e._v(" "),s("blockquote",[s("blockquote",[s("p",[e._v("Configuring a cluster")])])]),e._v(" "),s("ul",[s("li",[e._v("Next, we need to follow through the steps to configure our database cluster")]),e._v(" "),s("li",[e._v("Under database access, set up an admin user and password")]),e._v(" "),s("li",[e._v("Under network access, allow access from all IPs")]),e._v(" "),s("li",[e._v("Finally clusters, click connect to cluster, click connect using NodeJS and grab the connection string")])]),e._v(" "),s("h2",{attrs:{id:"differentiating-between-development-and-production-a-little-trip-into-dev-ops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#differentiating-between-development-and-production-a-little-trip-into-dev-ops"}},[e._v("#")]),e._v(" Differentiating Between Development and Production - A little trip into DEV Ops")]),e._v(" "),s("p",[e._v("We need a way to allow us to differentiate between- We need to be able to differentiate between our production and development environment. In other words, we need to have two databases. One to hold our development data, and another to hold our production data.")]),e._v(" "),s("p",[e._v("To begin with, we need a way to allow our database seeder to seed a production and development database. This can be achieved through injecting a "),s("code",[e._v("NODE_ENV")]),e._v(" variable into our seeder:")]),e._v(" "),s("ol",[s("li",[e._v("We are going to use "),s("code",[e._v("cross-env")]),e._v(" to allow us to dynamically set env variable in our "),s("code",[e._v("package.json")]),e._v(" file. Install it: "),s("code",[e._v("npm install -D cross-env")])]),e._v(" "),s("li",[e._v("Next, add a "),s("code",[e._v("MONGODB__PRODUCTION_URI")]),e._v(" property to your "),s("code",[e._v(".env")]),e._v(" file. You'll notice that the URI you've been using for staging contains the name of the database. As long as you've created a cluster with Atlas DB you can create several databases in this cluster by updating the database name in the connection string. Let's update our connection strings so we have tw database "),s("code",[e._v("wine")]),e._v(" and "),s("code",[e._v("wineDEV")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MONGODB__PRODUCTION_URI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("mongodb"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("srv"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("test"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("xxxx@cluster0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("x08wt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("net"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("wine"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),e._v("retryWrites"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("w"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("majority\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MONGODB_URI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("mongodb"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("srv"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("xxxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("test@cluster0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("x08wt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("net"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("wineDev"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),e._v("retryWrites"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("w"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("majority\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("We can now set up some environment specific node scripts in "),s("code",[e._v("package.json")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nodemon app.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"seedProduction"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cross-env NODE_ENV=production node seeder.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"seed"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node seeder.js"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("Notice how we are using "),s("code",[e._v("cross-env")]),e._v(" to set the production environment. Also not, we are not setting a "),s("code",[e._v("NODE_ENV=development")]),e._v(".\nI like to assume, unless explicitly stated, we are working in development.")]),e._v(" "),s("ul",[s("li",[e._v("Now, we can update the seeder to handle the production environment:")])]),e._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MONGODB_URI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MONGODB__PRODUCTION_URI")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// don't copy and past this! It needs to be updated.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" client "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MongoClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n  process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("NODE_ENV")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("===")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"production"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MONGODB__PRODUCTION_URI")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MONGODB_URI")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("ul",[s("li",[e._v("Notice how I am using the turnery operator to distinguish between production and dev.")]),e._v(" "),s("li",[e._v("If all has gone well you should be able to seed production and development databases, by running:")])]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run seed\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run seedDevelopment\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h2",{attrs:{id:"task-1-setting-up-atlas-db-and-seeding-the-production-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task-1-setting-up-atlas-db-and-seeding-the-production-database"}},[e._v("#")]),e._v(" Task 1 - Setting up Atlas DB and Seeding the Production Database")]),e._v(" "),s("p",[e._v(":::hint\nIf you already have a Atlas DB account, you can start from the second step.\n:::")]),e._v(" "),s("ul",[s("li",[e._v("Follow the steps above to set up a new database cluster")]),e._v(" "),s("li",[e._v("From your Atlas dash, click "),s("code",[e._v("clusters/collections")]),e._v(", and delete any existing databases that are in there. You may have one called "),s("code",[e._v("myFirstDatabase")]),e._v(", delete this.")]),e._v(" "),s("li",[e._v("Follow steps above to seed a production database.")])]),e._v(" "),s("h2",{attrs:{id:"setting-up-a-heroku-dyno"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-heroku-dyno"}},[e._v("#")]),e._v(" Setting up a Heroku Dyno")]),e._v(" "),s("p",[e._v("Now we have a database set up, we are ready to deploy our application to Heroku. This is actually a very painless process:")]),e._v(" "),s("h3",{attrs:{id:"making-our-application-deployable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#making-our-application-deployable"}},[e._v("#")]),e._v(" Making our Application Deployable")]),e._v(" "),s("p",[e._v("To make our application deployable, we only need to make a few tweaks:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Ensure you are working on a master branch (see this weeks setup instruction, above)")])]),e._v(" "),s("li",[s("p",[e._v("Specify the version of node we want in our hosting environment (Currently, supported versions are 10.x, 12.x, 14.x, and 15.x.). I am not sure why they skipped 13. We can do this by adding a scripts engines property in our "),s("code",[e._v("package.json")]),e._v(" file:")])])]),e._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"engines"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"14.x"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("blockquote",[s("blockquote",[s("p",[e._v("package.json - add the engines property to your package.json object. 14 or 15 should be fine.")])])]),e._v(" "),s("ul",[s("li",[e._v("When our application is deployed, Heroku will look in our "),s("code",[e._v("package.json")]),e._v(" file for a start script. It uses this script to run our app. Let's create a start command:")])]),e._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nodemon app.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"start"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node app.js"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("blockquote",[s("blockquote",[s("p",[e._v("package.json - a start script instructing heroku how to run our application")])])]),e._v(" "),s("ul",[s("li",[s("p",[e._v('Finally, Heroku automatically binds our applications to port 80. In doing so it sets an environment variable called "PORT". You\'ll notice, however, that we have our port assigned to the environment variable "WEB_PORT". For simplicity, let\'s updated our application to use the environment variable "PORT".')]),e._v(" "),s("ul",[s("li",[e._v("Updated your "),s("code",[e._v(".env")]),e._v(" file "),s("code",[e._v("WEB_PORT")]),e._v(" var to "),s("code",[e._v("PORT")])]),e._v(" "),s("li",[e._v("Within "),s("code",[e._v("app.js")]),e._v(", search and replace "),s("code",[e._v("WEB_PORT")]),e._v(" to "),s("code",[e._v("PORT")])])])])]),e._v(" "),s("p",[e._v(":::note\nThis section needs some installing, and we can't do this on the university computers. As such, you will need to do this at home.\n:::")]),e._v(" "),s("h3",{attrs:{id:"set-up"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-up"}},[e._v("#")]),e._v(" Set Up")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://signup.heroku.com/signup/dc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Create a new Heroku account"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://devcenter.heroku.com/articles/heroku-cli#download-and-install",target:"_blank",rel:"noopener noreferrer"}},[e._v("Download and install the Heroku CLI for your operating system"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("From within your project directory, in a terminal session run "),s("code",[e._v("heroku login")])]),e._v(" "),s("li",[e._v("Next, we need to create a new heroku application. From, within your project directory, in a terminal session run "),s("code",[e._v("heroku create")])]),e._v(" "),s("li",[e._v("If all has gone well, running "),s("code",[e._v("git remote -v")]),e._v(" should reveal that a 'heroku' remote had been configured for you. We can use this remote to deploy, but first, we need set a environment variable. We only need need set an environment variable for "),s("code",[e._v("MONGODB_URI")]),e._v(", as "),s("code",[e._v("heroku")]),e._v(" automatically sets the "),s("code",[e._v("PORT")]),e._v(" for us. Also, if you check your heroku dash, you'll see that an application has been created for you.")]),e._v(" "),s("li",[e._v("To set an environment variable for our heroku project, we simply need to run "),s("code",[e._v("heroku config:set VAR_NAME=VAR_VALUE")]),e._v(". As discussed, you only need to set an environment variable for "),s("code",[e._v("MONGODB_URI")]),e._v(". This should be set to the URL connection that you used earlier in your seeder. Set it as follows, "),s("code",[e._v('heroku config:set MONGODB_URI="YOUR PRODUCTION DB STRING"')]),e._v(". You can also check, or set, this manually by looking in your "),s("code",[e._v("project settings -> Config Vars")]),e._v(". ("),s("strong",[e._v("Note,")]),e._v(" you need the quotation marks)")]),e._v(" "),s("li",[e._v("Within the VS code integrated terminal, type in "),s("code",[e._v("git branch")]),e._v(" you may find you are on the branch "),s("code",[e._v("week-8-solutions")]),e._v(", we need to have a master branch that we are going to deploy. You can create one by making a commit (if you have file changes), and running "),s("code",[e._v("git checkout -b master")])]),e._v(" "),s("li",[e._v("We are now ready to deploy. First ensure you have committed the latest version of your work. Next, run "),s("code",[e._v("git push heroku master")]),e._v(". If all has gone well you should be able to access your application using the URL printed on your terminal output.")])]),e._v(" "),s("h2",{attrs:{id:"task-2-deploying-your-web-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task-2-deploying-your-web-application"}},[e._v("#")]),e._v(" Task 2 - Deploying your Web Application")]),e._v(" "),s("p",[e._v("If you have a laptop, follow the steps above to deploy your wine tasting application to Heroku.")]),e._v(" "),s("h2",{attrs:{id:"task-3-continuous-deployments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task-3-continuous-deployments"}},[e._v("#")]),e._v(" Task 3 - Continuous Deployments")]),e._v(" "),s("p",[s("img",{attrs:{src:a(373),alt:""}})]),e._v(" "),s("blockquote",[s("blockquote",[s("p",[e._v("Automatic deployment enabled. Every time I push to the master branch, my project deploys!")])])]),e._v(" "),s("p",[e._v("Let's see if we can use a git hook to deploy our work. This means that whenever we push to our git repos master branch, our project deploys.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(374),alt:""}})]),e._v(" "),s("blockquote",[s("blockquote",[s("p",[e._v("You need to ensure you MONGODB_URI is set")])])]),e._v(" "),s("ul",[s("li",[e._v("If you are working from university, and have not installed the Heroku CLI:\n"),s("ul",[s("li",[e._v("create a new application in your "),s("code",[e._v("https://dashboard.heroku.com/")]),e._v(".")]),e._v(" "),s("li",[e._v("within "),s("code",[e._v("project settings -> Config Vars")]),e._v(" set your MONGODB_URI to your production database")])])]),e._v(" "),s("li",[s("code",[e._v("git remote remove origin")])]),e._v(" "),s("li",[s("code",[e._v("git remote add origin <your git repo address>")])]),e._v(" "),s("li",[e._v("Push your code to GitHub, "),s("code",[e._v("git push origin master")])]),e._v(" "),s("li",[e._v("Within the VS code integrated terminal, type in "),s("code",[e._v("git branch")]),e._v(" you may find you are on the branch "),s("code",[e._v("week-8-solutions")]),e._v(", we need to have a master branch that we are going to deploy. You can create one by making a commit (if you have file changes), and running "),s("code",[e._v("git checkout -b master")])]),e._v(" "),s("li",[e._v("Now, in your "),s("code",[e._v("https://dashboard.heroku.com/")]),e._v(" , go to your "),s("code",[e._v("project --\x3e deploy")]),e._v(" and click "),s("code",[e._v("GitHub")]),e._v(".\n"),s("ul",[s("li",[e._v("You'll then be able to connect your repository such that when you push to your projects master branch it deploys!")])])])]),e._v(" "),s("h2",{attrs:{id:"task-4-set-up-a-project-for-your-assessment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task-4-set-up-a-project-for-your-assessment"}},[e._v("#")]),e._v(" Task 4 - Set up a Project for Your Assessment")]),e._v(" "),s("p",[e._v("Configure a new deployable project for your assessment")])])}),[],!1,null,null,null);t.default=n.exports}}]);